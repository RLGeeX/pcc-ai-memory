{
  "permissions": {
    "allow": [
      "Bash(gemini -p \"$(cat <<''EOF''\nResearch comprehensive Terraform patterns for GCP Apigee X provisioning including:\n1. google_apigee_organization resource configuration\n2. google_apigee_environment setup with service accounts\n3. google_apigee_instance for runtime instances\n4. IAM bindings for Apigee service accounts\n5. Artifact Registry integration\n6. Secret Manager for API credentials\n7. GCS bucket for OpenAPI specs storage\n\nProvide complete Terraform module examples following Google best practices.\nInclude variable definitions, outputs, and proper dependency management.\nFocus on production-ready patterns with error handling and documentation.\nEOF\n)\")",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__jira-pcc__getAccessibleAtlassianResources",
      "mcp__jira-ti__getAccessibleAtlassianResources",
      "mcp__jira-pcc__createJiraIssue",
      "Bash(head:*)",
      "mcp__jira-pcc__getTransitionsForJiraIssue",
      "mcp__jira-pcc__transitionJiraIssue",
      "mcp__jira-pcc__getJiraIssue",
      "mcp__jira-pcc__editJiraIssue",
      "mcp__serena__replace_regex",
      "mcp__serena__search_for_pattern",
      "mcp__serena__activate_project",
      "mcp__serena__find_file",
      "mcp__jira-pcc__atlassianUserInfo",
      "Bash(find:*)",
      "mcp__tavily__tavily-search",
      "Skill(superpowers:brainstorming)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "mcp__tavily__tavily-extract"
    ],
    "deny": [],
    "ask": []
  }
}
